@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    <script src="~/Scripts/jquery-1.8.2.min.js"></script>
</head>
<body style="width:960px;margin:0 auto">
    <fieldset>
        <legend>普通上传</legend>
        <pre>这是传统的form表单上传，使用form表单的input[type=”file”]控件，可以打开系统的文件选择对话框，
        从而达到选择文件并上传的目的，它的好处是多浏览器兼容，它是web开发者最常用的一种文件上传方式。</pre>
        <form action="/Home/Upload" method="post" enctype="multipart/form-data">
            <input type="file" name="file" />
            <input type="submit" value="上传" />
        </form>
    </fieldset>
    <fieldset>
        <legend>使用iframe无刷新上传</legend>
        <form action="/Home/Upload" method="post" target="hf" enctype="multipart/form-data">
            <input type="file" name="file" />
            <input type="submit" value="上传" />
        </form>
        <iframe name='hf' id="hf" style='display:none'></iframe> 
    </fieldset>
    <fieldset>
        <legend>使用Ajax异步无刷新上传</legend>
        <pre>Ajax无刷新上传的方式，本质上与表单上传无异，只是把表单里的内容提出来采用ajax提交，
        并且由前端决定请求结果回传后的展示结果，不用像直接表单上传那样刷新和跳转页面。
        提交数据时，用到了FormData对象来发送二进制文件，FormData构造函数提供的append()方法，
        除了直接添加二进制文件还可以附带一些其它的参数， 作为XMLHttpRequest实例的参数提交给服务端。
        使用jQuery提供的ajax方法来发送二进制文件，还需要附加两个参数：processData: false // 不要对data参数进行序列化处理，默认为true
        contentType: false // 不要设置Content-Type请求头，因为文件数据是以 multipart/form-data 来编码</pre>
        <form>
            <input id="file" name="file" type="file" />
            <input type="button" id="btn" value="上传" />
        </form>
        <script type="text/javascript">
            $("#btn").on("click", function () {
                var formData = new FormData();
                formData.append("file", $("#file")[0].files[0]);
                $.ajax({
                    url: "/Home/Upload",
                    type: "POST",
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        
                    }
                });
            });
        </script>
    </fieldset>
    <fieldset>
        <legend>使用SwfUpload无刷新上传</legend>
        <form>
            <div style="display: inline; border: solid 1px #7FAAFF; background-color: #C5D9FF; padding: 2px;">
                <span id="spanButtonPlaceholder"></span>
                <input id="btnUpload" type="button" value="上  传" onclick="startUploadFile();" class="btn3_mouseout" />
                <input id="btnCancel" type="button" value="取消所有上传" onclick="cancelUpload();" class="btn3_mouseout" />
            </div>
        </form>
        <div id="divFileProgressContainer"></div>
        <div id="thumbnails">
            <table id="infoTable" border="0" style="border: solid 1px #7FAAFF; background-color: #C5D9FF;margin-top:5px"></table>
        </div>
        <link href="Assets/css/swfupload.css" rel="stylesheet" type="text/css" />
        <script type="text/javascript" src="Assets/swfupload/swfupload.js"></script>
        <script type="text/javascript" src="Assets/swfupload/handlers.js"></script>
        <script type="text/javascript">
            var swfu;
            window.onload = function () {
                swfu = new SWFUpload({
                    upload_url: "Home/Upload",
                    post_params: { "name": "zwm" },
                    use_query_string: true,
                    // File Upload Settings
                    file_size_limit: "10 MB",	// 文件大小控制
                    file_types: "*.*",
                    file_types_description: "All Files",
                    file_upload_limit: "0",
                    file_queue_error_handler: fileQueueError,
                    file_dialog_complete_handler: fileDialogComplete,//选择好文件后提交
                    file_queued_handler: fileQueued,
                    upload_progress_handler: uploadProgress,
                    upload_error_handler: uploadError,
                    upload_success_handler: uploadSuccess,
                    upload_complete_handler: uploadComplete,
                    button_placeholder_id: "spanButtonPlaceholder",
                    button_width: 120,
                    button_height: 18,
                    button_text: '<span class="button">请选择文件 </span>',
                    button_text_style: '.button { font-family: Helvetica, Arial, sans-serif; font-size: 12pt; } .buttonSmall { font-size: 10pt; }',
                    button_text_top_padding: 0,
                    button_text_left_padding: 18,
                    button_window_mode: SWFUpload.WINDOW_MODE.TRANSPARENT,
                    button_cursor: SWFUpload.CURSOR.HAND,
                    // Flash Settings
                    flash_url: "Assets/swfupload/swfupload.swf",
                    custom_settings: {
                        upload_target: "divFileProgressContainer"
                    },
                    // Debug Settings
                    debug: false  //是否显示调试窗口
                });
            };
            function startUploadFile() {
                swfu.startUpload();
            }
        </script>
    </fieldset>
    <fieldset>
        <legend>截图粘贴上传</legend>
        <pre>截图粘贴上传的核心思想是，监听粘贴事件，然后获取剪切板中的数据，如果是一张图片，则触发上传事件。
        触发剪贴板事件’paste’，从系统剪切板获取内容，而系统剪切板的数据在不同浏览器保存在不同的位置：
        IE内核：windows.clipboardData
        其它：e.originalEvent.clipboardData</pre>
        <textarea></textarea>
        <script type="text/javascript">
            $("textarea").on("paste", function (e) {
                e.stopPropagation();
                var self = this;
                var clipboardData = e.originalEvent.clipboardData;
                if (clipboardData.items.length <= 0) {
                    return;
                }
                var file = clipboardData.items[0].getAsFile();
                if (!file) {
                    return;
                }
                var formData = new FormData();
                formData.append("file", file);
                $.ajax({
                    url: "/Home/Upload",
                    type: "POST",
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        alert('x');
                    }
                });
                e.preventDefault();
            });
        </script>
    </fieldset>
    <fieldset>
        <legend>拖拽上传</legend>
        <pre>拖拽上传的方式，支持的浏览器比较少，因为它用到了HTML5的两个新的属性（API）一个是Drag and Drop,一个是File API。
        上传域监听拖拽的三个事件：dragEnter、dragOver和drop，分别对应拖拽至、拖拽时和释放三个操作的处理机制，当然你也可以监听dragLeave事件。
        HTML5的File API提供了一个FileList的接口，它可以通过拖拽事件的e.dataTransfer.files来传递的文件信息，获取本地文件列表信息。
        File API在HTML5规范中只是草案，在 W3C 草案中，File 对象只包含文件名、文件类型和文件大小等只读属性。
        但部分浏览器在草案之外提供了一个名为 FileReader 的对象，用以读取文件内容，并且可以监控读取状态，
        它提供的方法有： “readAsBinaryString” ，”readAsDataURL” ，”readAsText” ，”abort” 等。
        拖拽上传过程中的几个关键点：
        在drop事件触发后通过e.dataTransfer.files获取拖拽文件列表，在jQuery中是e.originalEvent.dataTransfer.files
        拖拽上传仅支持图片，文件对象中file.type标识了文件类型。
        由于可能是多图拖拽，所以可以遍历图片上传，这里用了Underscore的each方法。
        这里用readAsDataURL读取文件内容为二进制文件，你还可以将其转换为Base64方式上传，只是http协议里面存在对非二进制数据的上传大小限制为2M。
        上传的过程跟前面的方式相同，即：创建FormData对象并发起Ajax请求。</pre>
        <textarea id="textarea" rows="10" cols="100"></textarea>
        <script type="text/javascript">
            // dragenter
            $("#textarea").on("dragenter", function (e) {
                e.preventDefault();
            });
            // dragover
            $("#textarea").on("dragover", function (e) {
                e.preventDefault();
            });
            // drop
            $("#textarea").on("drop", function (e) {
                e.stopPropagation();
                e.preventDefault();
                var dataTransfer = e.originalEvent.dataTransfer;
                if (dataTransfer.items.length <= 0) {
                    return;
                }
                var file = dataTransfer.items[0].getAsFile();
                if (!file) {
                    return;
                }
                var formData = new FormData();
                formData.append("file", file);
                $.ajax({
                    url: "/Home/Upload",
                    type: "POST",
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        alert('x');
                    }
                });
                e.preventDefault();
            });
        </script>
    </fieldset>
</body>
</html>
